#!/bin/sh

###############################################################################
### Aims ###
Using only coding regions of the MinION assembly, focus on variants that could be linked the social organisation. Add a fake SNP and see if I can detect it.

###############################################################################
### Project preparation ###
module load bcftools/1.8
module load vcftools/0.1.15
module load R/3.5.1
# tabix 0.2.5
module load plink/1.9-170906


cp -a 2019-03-19-coding-only-109samples-maf10percent 2019-04-02-addfakesnp
cd 2019-04-02-addfakesnp

mkdir input

cd input

# copy vcf that has been filtered:
# 75% sample support
# biallelic SNPs
# phred quality > 30
# 109 samples (outliers removed)
# and contains only coding regions
ln -s ~/2019-03-18-filter_PpalE_genic_regions/result/intersected.vcf .
cd ..

mkdir result

mkdir -p ~/monthly_autoScratch/2019-03-05-association_analysis_flye_assembly/2019-03-08-109samples-maf10percent

ln -s ~/monthly_autoScratch/2019-03-05-association_analysis_flye_assembly/2019-03-08-109samples-maf10percent tmp

mkdir -p ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp

# copy important files
cp ~/2018-11-09-association_analysis_mixed_assembly/result/2019-02-06-109samples-maf10percent/pheno.txt .

cp ~/2018-11-09-association_analysis_mixed_assembly/result/2019-02-06-109samples-maf10percent/exploring-pca-results.Rmd .

cp ~/2018-11-09-association_analysis_mixed_assembly/result/2019-02-06-109samples-maf10percent/input/S2_pheidole_pop_paper.csv .

cp ~/2018-11-09-association_analysis_mixed_assembly/result/2019-02-06-109samples-maf10percent/assoc-analysis.Rmd .

cp ~/2019-03-18-filter_PpalE_genic_regions/result/non_genic_contig_names .

cp ~/2019-03-18-filter_PpalE_genic_regions/intersected.contig.length .

todayanalysis="2019-04-02-flye-Pheidole-genic-fakesnp"

################################################################################
# Add a SNP to the vcf file with the conditions:


# Step 1: create a realistic SNP
# monogynous are 0/0
# polygynous are 1/1
# is the analysis picking this SNP in the Manhattan plot?
# copy one SNP from VF to new file and change the name of contig
bcftools view -H input/intersected.vcf | head -1 | sed 's/contig_1_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/contig_0_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/' > fakeSNP

# remove the top 9 lines (not genotype info)
sed -r 's/\t/\n/g' fakeSNP | tail -n 108 > fakeSNP-gt_only

# get the sample names
bcftools query -l input/intersected.vcf > sample_names.txt

# change only the GT of poly for 1/1
Rscript make-fake-snp.Rmd

# reformat the snp info into VCF
cut -f 1,2,3,4,5,6,7,8,9 fakeSNP | paste - fakeSNP-gt_only-updated > fakeSNP_updated

# add new SNP and all real SNP to a new VCF file
cat input/intersected.vcf fakeSNP_updated > tmp/intersected_with-fakeSNP.vcf

# This vcf is ready to be analysed the same way as before
# to see if I can pick up the signal or not

# Step 2: create a realistic SNP
# monogynous are 0/0
# polygynous are 0/1
# is the analysis picking this SNP in the Manhattan plot?
# copy one SNP from VF to new file and change the name of contig
bcftools view -H input/intersected.vcf | head -1 | sed 's/contig_1_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/contig_01_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/' > fakeSNPhomhet

# remove the top 9 lines (not genotype info)
sed -r 's/\t/\n/g' fakeSNPhomhet | tail -n 108 > fakeSNPhomhet-gt_only

# get the sample names
bcftools query -l input/intersected.vcf > sample_names.txt

# change only the GT of poly for 1/1
cp make-fake-snp.Rmd make-fake-homhet-snp.Rmd
Rscript make-fake-homhet-snp.Rmd

# reformat the snp info into VCF
cut -f 1,2,3,4,5,6,7,8,9 fakeSNP | paste - fakeSNPhomhet-gt_only-updated > fakeSNPhomhet_updated

# add new SNP and all real SNP to a new VCF file
cat input/intersected.vcf fakeSNPhomhet_updated > tmp/intersected_with-fakeSNPhomhet.vcf

# This vcf is ready to be analysed the same way as before
# to see if I can pick up the signal or not


### Checking vcf stats ###

# Step 1: calculate the number of variants left: 113235
# [coding&noncoding: 808475]
grep -v "^#" tmp/intersected_with-fakeSNP.vcf | wc -l

# get number of variants per contig
grep -v "^#" tmp/intersected_with-fakeSNP.vcf | cut -f 1 | sort | uniq -c > ${todayanalysis}-snp-per-contig.txt


# copy to archive

rsync -avx --human-readable --progress tmp/intersected_with-fakeSNP.vcf ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/.


rsync -avx --human-readable --progress sample_names.txt ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/.


# softlink to result

cd result

ln -s ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/intersected_with-fakeSNP.vcf .

ln -s ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/sample_names.txt .

cd ..

###############################################################################
###############################################################################
Fork one: with LD pruning.
###############################################################################
## Prune away LD SNPs ##


# step 1 assign chromosome-and-position-based IDs (currently not named)
plink --vcf result/intersected_with-fakeSNP.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --set-missing-var-ids @:#\$1,\$2 \
      --make-bed \
      --out tmp/${todayanalysis}-id

# step 2 - pruning away SNPs in LD
# people seem to use 0.2 as a threshold
# 58,497 of 113,234 variants removed
# [coding&noncoding: 522,460 of 808,475 variants removed]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --indep-pairwise 50 5 0.2 \
      --out tmp/${todayanalysis}-snp-in-ld

cp tmp/${todayanalysis}-snp-in-ld.prune.in result/.

# step 3 - filter data by keeping only the SNPs that are not in disequilibrium
# 54,737 variants and 108
# [coding&noncoding: 286,015 variants kept and 108 people]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --extract tmp/${todayanalysis}-snp-in-ld.prune.in \
      --make-bed \
      --out tmp/${todayanalysis}-pruned-data

cp tmp/${todayanalysis}-pruned-data.bim result/. ;
cp tmp/${todayanalysis}-pruned-data.bed result/. ;
cp tmp/${todayanalysis}-pruned-data.fam result/.



###############################################################################
## PCA analysis ##

# step 1 - create a genome file - IBD will be calculated
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --out tmp/${todayanalysis}-IBD

# step 2 - generate an eigenvec file containing PCs
# header adds a header line to the .eigenvec file(s)
# --cluster uses IBS values calculated to perform complete linkage clustering
# .cluster2 describes only the final cluster configuration
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

cp tmp/${todayanalysis}-PCA* result/.

# make sense of the pca eigenvalue and ultimately
# how much of the variance is explained by each PC?
# No change when adding one extra snp
Rscript exploring-pca-results.Rmd


###############################################################################
## run association test ##

# Step 1: Perform the association analysis using 2 main PCs
# from the eigenvec file as covariates
# covariate can only be used with a regression model, here logistics --logistic
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --covar result/2019-04-02-flye-Pheidole-genic-fakesnp-eigenvec.tops.csv \
      --covar-name PC1,PC2 \
      --logistic \
      --out tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues

# Step 2: understanding the output of the model
# ADD means the additive effects of allele dosage (counts of each allele)
# the direction of the regression coefficient represents
# the effect of each extra minor allele
# (i.e. a positive regression coefficient means that
# the minor allele increases risk/phenotype mean
# PLINK will also output the beta-coefficients for the adjustment variables
# that is why there are more lines than SNPs: 164215
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic

# remove the lines about PC1 and PC2
grep ADD tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic > \
 tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# count the number of variants left: 54,38 SNPs
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# Step 3: try a simple fisher test
# standard case/control association analysis using Fisher's exact test to generate significance
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out tmp/${todayanalysis}

# copy to result
cp tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered result/.
cp tmp/${todayanalysis}.assoc.fisher result/.


###############################################################################
## Association analysis ##

# adjusting p-values from plink output
# association test on each SNP for allele count per gyny group
Rscript assoc-analysis.Rmd






todayanalysis="2019-04-02-flye-Bruniquel-genic-fakesnp"
###############################################################################
### Subset for Bruniquel only ###

cp ~/2019-03-05-association_analysis_flye_assembly/result/2019-03-14-bruniquel-maf10percent/bruniquel-colonies.txt .

vcftools --vcf tmp/intersected_with-fakeSNP.vcf \
         --keep bruniquel-colonies.txt \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}
# kept 68 out of 108 Individuals
# 113234 out of a possible 113234 Sites
# 46 seconds


###############################################################################
### Prune away LD SNPs ##


# step 1 assign chromosome-and-position-based IDs (currently not named)
plink --vcf tmp/${todayanalysis}.recode.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --set-missing-var-ids @:#\$1,\$2 \
      --make-bed \
      --out tmp/${todayanalysis}-id

# step 2 - pruning away SNPs in LD
# people seem to use 0.2 as a threshold
# 57,613 of 113,235 variants removed
# [coding&noncoding: 522,460 of 808,475 variants removed]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --indep-pairwise 50 5 0.2 \
      --out tmp/${todayanalysis}-snp-in-ld

cp tmp/${todayanalysis}-snp-in-ld.prune.in result/.

# step 3 - filter data by keeping only the SNPs that are not in disequilibrium
# 54,737 variants and 108
# [coding&noncoding: 286,015 variants kept and 108 people]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --extract tmp/${todayanalysis}-snp-in-ld.prune.in \
      --make-bed \
      --out tmp/${todayanalysis}-pruned-data

cp tmp/${todayanalysis}-pruned-data.bim result/. ;
cp tmp/${todayanalysis}-pruned-data.bed result/. ;
cp tmp/${todayanalysis}-pruned-data.fam result/.



###############################################################################
## PCA analysis ##

# step 1 - create a genome file - IBD will be calculated
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --out tmp/${todayanalysis}-IBD

# step 2 - generate an eigenvec file containing PCs
# header adds a header line to the .eigenvec file(s)
# --cluster uses IBS values calculated to perform complete linkage clustering
# .cluster2 describes only the final cluster configuration
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

cp tmp/${todayanalysis}-PCA* result/.

# make sense of the pca eigenvalue and ultimately
# how much of the variance is explained by each PC?
# No change when adding one extra snp
cp exploring-pca-results.Rmd Bruniquel-exploring-pca-results.Rmd
Rscript Bruniquel-exploring-pca-results.Rmd


###############################################################################
## run association test ##

# Step 1: Perform the association analysis using 2 main PCs
# from the eigenvec file as covariates
# covariate can only be used with a regression model, here logistics --logistic
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --covar result/2019-04-02-flye-Bruniquel-genic-fakesnp-eigenvec.tops.csv \
      --covar-name PC1,PC2 \
      --logistic \
      --out tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues

# Step 2: understanding the output of the model
# ADD means the additive effects of allele dosage (counts of each allele)
# the direction of the regression coefficient represents
# the effect of each extra minor allele
# (i.e. a positive regression coefficient means that
# the minor allele increases risk/phenotype mean
# PLINK will also output the beta-coefficients for the adjustment variables
# that is why there are more lines than SNPs: 166867
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic

# remove the lines about PC1 and PC2
grep ADD tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic > \
 tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# count the number of variants left: 55,622 SNPs
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# Step 3: try a simple fisher test
# standard case/control association analysis using Fisher's exact test to generate significance
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out tmp/${todayanalysis}

# copy to result
cp tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered result/.
cp tmp/${todayanalysis}.assoc.fisher result/.


###############################################################################
## Association analysis ##

# adjusting p-values from plink output
# association test on each SNP for allele count per gyny group
cp assoc-analysis.Rmd Bruniquel-assoc-analysis.Rmd
Rscript Bruniquel-assoc-analysis.Rmd
#!/bin/sh

###############################################################################
### Aims ###
Using only coding regions of Ppal_E, test if variants can be detected.
By misgenotyping 10% of the samples (give other social type)

###############################################################################
### Project preparation ###
module load bcftools/1.8
module load vcftools/0.1.15
module load R/3.5.1
# tabix 0.2.5
module load plink/1.9-170906

unlink tmp

mkdir -p ~/scratch/2019-03-05-association_analysis_flye_assembly/2019-03-08-109samples-maf10percent

ln -s ~/scratch/2019-03-05-association_analysis_flye_assembly/2019-03-08-109samples-maf10percent tmp


todayanalysis="2020-03-09-flye-Pheidole-genic-fakesnp-homhet-misgenotyping"
todayanalysis="2020-03-24-flye-Pheidole-genic-fakesnp-homhet-misgenotyping"

################################################################################
# Change the social type of 10% of samples to the VCF file



### Step 1: make misgenotyping in sample file

# number of samples: 108
wc -l result/sample_names.txt

# number that I should change: 11

# sample randomly that number
shuf -n 11 result/sample_names.txt > tmp/${todayanalysis}_sample_names_to_misgenotype.txt

# change social type in a temp file
grep "P" tmp/${todayanalysis}_sample_names_to_misgenotype.txt | sed 's/P/M/g' > tmp/${todayanalysis}_sample_names_misgenotyped.txt

grep "M" tmp/${todayanalysis}_sample_names_to_misgenotype.txt | sed 's/M/P/g' >> tmp/${todayanalysis}_sample_names_misgenotyped.txt

grep "N" tmp/${todayanalysis}_sample_names_to_misgenotype.txt | sed 's/N/P/g' >> tmp/${todayanalysis}_sample_names_misgenotyped.txt

# sort resulting files
# original
sort tmp/${todayanalysis}_sample_names_to_misgenotype.txt > ${todayanalysis}_original

# altered
sort tmp/${todayanalysis}_sample_names_misgenotyped.txt > ${todayanalysis}_altered

# combine into one file that takes two columns
paste ${todayanalysis}_original ${todayanalysis}_altered > ${todayanalysis}_patterns.txt



### Step 2: make misgenotyping in VCF

# make a new file
cp result/intersected_with-fakeSNPhomhet.vcf tmp/${todayanalysis}_intersected_with-fakeSNPhomhet_misgenotyping.vcf

# replace in line in the VCF
while read -r pattern replacement; do   
    sed -i "s/$pattern/$replacement/" tmp/${todayanalysis}_intersected_with-fakeSNPhomhet_misgenotyping.vcf
done < ${todayanalysis}_patterns.txt



# Step 3: change pheno.txt
cp pheno.txt ${todayanalysis}_pheno_misgenotyping.txt

while read -r pattern replacement; do   
    sed -i "s/$pattern/$replacement/g" ${todayanalysis}_pheno_misgenotyping.txt
done < ${todayanalysis}_patterns.txt

# change numbers by hand for now (2 > 1)


# put VCF in symlink

rsync -avx --human-readable --progress tmp/${todayanalysis}_intersected_with-fakeSNPhomhet_misgenotyping.vcf ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/.

cd result

ln -s ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/${todayanalysis}_intersected_with-fakeSNPhomhet_misgenotyping.vcf .

# This VCF is ready to be analysed the same way as before
# to see if I can pick up the signal or not





### Checking vcf stats ###

# Step 1: calculate the number of variants left: 113,235
# [coding&noncoding: 808475]
grep -v "^#" result/${todayanalysis}_intersected_with-fakeSNPhomhet_misgenotyping.vcf | wc -l

# get number of variants per contig
grep -v "^#" result/${todayanalysis}_intersected_with-fakeSNPhomhet_misgenotyping.vcf | cut -f 1 | sort | uniq -c > ${todayanalysis}-snp-per-contig.txt



###############################################################################
###############################################################################
#     GWAS without LD pruning
###############################################################################


# Step 1: assign chromosome-and-position-based IDs (currently not named)
plink --vcf result/${todayanalysis}_intersected_with-fakeSNPhomhet_misgenotyping.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno ${todayanalysis}_pheno_misgenotyping.txt \
      --set-missing-var-ids @:#\$1,\$2 \
      --make-bed \
      --out tmp/${todayanalysis}-id

# Step 2: run a simple Fisher test
# standard case/control association analysis using Fisher's exact test to generate significance
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno ${todayanalysis}_pheno_misgenotyping.txt \
      --assoc fisher \
      --out result/${todayanalysis}

# Step 3: check visualisation in R


###############################################################################
## Association analysis ##

# adjusting p-values from plink output
# association test on each SNP for allele count per gyny group
cp assoc-analysis.Rmd assoc-analysis-homhet.Rmd
Rscript assoc-analysis.Rmd


# Conclusion: A fake SNP is detected by Fisher test, but not regression analysis.



todayanalysis="2019-04-02-flye-Bruniquel-genic-fakesnp"
###############################################################################
### Subset for Bruniquel only ###

cp ~/2019-03-05-association_analysis_flye_assembly/result/2019-03-14-bruniquel-maf10percent/bruniquel-colonies.txt .

vcftools --vcf tmp/intersected_with-fakeSNP.vcf \
         --keep bruniquel-colonies.txt \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}
# kept 68 out of 108 Individuals
# 113234 out of a possible 113234 Sites
# 46 seconds


###############################################################################
### Prune away LD SNPs ##


# step 1 assign chromosome-and-position-based IDs (currently not named)
plink --vcf tmp/${todayanalysis}.recode.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --set-missing-var-ids @:#\$1,\$2 \
      --make-bed \
      --out tmp/${todayanalysis}-id

# step 2 - pruning away SNPs in LD
# people seem to use 0.2 as a threshold
# 57,613 of 113,235 variants removed
# [coding&noncoding: 522,460 of 808,475 variants removed]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --indep-pairwise 50 5 0.2 \
      --out tmp/${todayanalysis}-snp-in-ld

cp tmp/${todayanalysis}-snp-in-ld.prune.in result/.

# step 3 - filter data by keeping only the SNPs that are not in disequilibrium
# 54,737 variants and 108
# [coding&noncoding: 286,015 variants kept and 108 people]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --extract tmp/${todayanalysis}-snp-in-ld.prune.in \
      --make-bed \
      --out tmp/${todayanalysis}-pruned-data

cp tmp/${todayanalysis}-pruned-data.bim result/. ;
cp tmp/${todayanalysis}-pruned-data.bed result/. ;
cp tmp/${todayanalysis}-pruned-data.fam result/.



###############################################################################
## PCA analysis ##

# step 1 - create a genome file - IBD will be calculated
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --out tmp/${todayanalysis}-IBD

# step 2 - generate an eigenvec file containing PCs
# header adds a header line to the .eigenvec file(s)
# --cluster uses IBS values calculated to perform complete linkage clustering
# .cluster2 describes only the final cluster configuration
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

cp tmp/${todayanalysis}-PCA* result/.

# make sense of the pca eigenvalue and ultimately
# how much of the variance is explained by each PC?
# No change when adding one extra snp
cp exploring-pca-results.Rmd Bruniquel-exploring-pca-results.Rmd
Rscript Bruniquel-exploring-pca-results.Rmd


###############################################################################
## run association test ##

# Step 1: Perform the association analysis using 2 main PCs
# from the eigenvec file as covariates
# covariate can only be used with a regression model, here logistics --logistic
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --covar result/2019-04-02-flye-Bruniquel-genic-fakesnp-eigenvec.tops.csv \
      --covar-name PC1,PC2 \
      --logistic \
      --out tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues

# Step 2: understanding the output of the model
# ADD means the additive effects of allele dosage (counts of each allele)
# the direction of the regression coefficient represents
# the effect of each extra minor allele
# (i.e. a positive regression coefficient means that
# the minor allele increases risk/phenotype mean
# PLINK will also output the beta-coefficients for the adjustment variables
# that is why there are more lines than SNPs: 166867
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic

# remove the lines about PC1 and PC2
grep ADD tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic > \
 tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# count the number of variants left: 55,622 SNPs
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# Step 3: try a simple fisher test
# standard case/control association analysis using Fisher's exact test to generate significance
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out tmp/${todayanalysis}

# copy to result
cp tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered result/.
cp tmp/${todayanalysis}.assoc.fisher result/.


###############################################################################
## Association analysis ##

# adjusting p-values from plink output
# association test on each SNP for allele count per gyny group
cp assoc-analysis.Rmd Bruniquel-assoc-analysis.Rmd
Rscript Bruniquel-assoc-analysis.Rmd




###############################################################################
###############################################################################

# Simulating Solenopsis invicta SNPs and testing for association

todayanalysis="2019-08-23-flye-Pheidole-genic-fake-Solenopsis-snps"

# autoscratch does not exist anymore
unlink tmp
mkdir -p ~/scratch/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp

ln -s ~/scratch/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp tmp

# Step 1: create realistic SNPs
# social SNPs count: 1.4 per 1000bp (Pracana et al 2017)
# monogynous are all 0/0
# polygynous are either 0/1 (p=2/3) or 0/0 (p=1/3)

# copy one SNP from VF to new file and change the name of contig
bcftools view -H input/intersected.vcf | head -1 | sed 's/contig_1_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/contig_01_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/' > fakeSNPSol

# keep header of SNP (to be altered in R)
cut -f 1,2,3,4,5,6,7,8,9 fakeSNPSol > snp-first-line

# remove the top 9 lines (not genotype info)
sed -r 's/\t/\n/g' fakeSNPSol | tail -n 108 > fakeSNPSol-gt_only

# get the sample names
bcftools query -l input/intersected.vcf > sample_names.txt

# calculate nb of SNPs 113234
bcftools view -H input/intersected.vcf | wc -l

# change genotype
cp make-fake-snp.Rmd make-fake-Sol-snp.Rmd
Rscript make-fake-Sol-snp.Rmd

# create an empty file
touch tmp/fakeSolSNPs

# paste header and info in order
for i in $(seq 1 94); do
    paste tmp/updated_GT_snp_header$i tmp/updated_GT_snp$i >> tmp/fakeSolSNPs
done



# Step 2: assign chromosome-and-position-based IDs (113234 variants)
plink --vcf input/intersected.vcf  \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --set-missing-var-ids @:#\$1,\$2 \
      --make-bed \
      --out tmp/${todayanalysis}-id

# recode as VCF to be filtered by vcftools
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --recode vcf-fid \
      --out tmp/${todayanalysis}-id

# Step 3: for each population, filter out the SNPs without 100% support and  monomorphic

# keep only samples from Bruniquel
cat S2_pheidole_pop_paper.csv | grep -E "Bruniquel" | cut -d "," -f 1 > bruniquel-colonies.txt

# filter VCF
vcftools --vcf tmp/${todayanalysis}-id.vcf \
         --max-missing 1 \
         --keep bruniquel-colonies.txt \
         --maf 0.05 \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}-bruniquel-100support-NOmonomorphic

# obtain SNP IDs
bcftools query -f '%ID\n' tmp/${todayanalysis}-bruniquel-100support-NOmonomorphic.recode.vcf > bruniquel-snp.txt
wc -l bruniquel-snp.txt
# 11900 bruniquel-snp.txt

# keep only samples from Italy
cat S2_pheidole_pop_paper.csv | grep -E "Italy" | cut -d "," -f 1 > Italy-colonies.txt

# filter VCF
vcftools --vcf tmp/${todayanalysis}-id.vcf \
         --max-missing 1 \
         --keep Italy-colonies.txt \
         --maf 0.05 \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}-Italy-100support-NOmonomorphic

# obtain SNP IDs
bcftools query -f '%ID\n' tmp/${todayanalysis}-Italy-100support-NOmonomorphic.recode.vcf > Italy-snp.txt

wc -l Italy-snp.txt
# 28458 Italy-snp.txt

# keep only samples from Pyrenees
cat S2_pheidole_pop_paper.csv | grep -E "Pyrenees" | cut -d "," -f 1 > Pyrenees-colonies.txt

# filter VCF
vcftools --vcf tmp/${todayanalysis}-id.vcf \
        --max-missing 1 \
        --keep Pyrenees-colonies.txt \
        --maf 0.05 \
        --recode \
        --recode-INFO-all \
        --out tmp/${todayanalysis}-Pyrenees-100support-NOmonomorphic

# obtain SNP IDs
bcftools query -f '%ID\n' tmp/${todayanalysis}-Pyrenees-100support-NOmonomorphic.recode.vcf > Pyrenees-snp.txt
wc -l Pyrenees-snp.txt
# 49838 Pyrenees-snp.txt



# Step 4: keep loci that are found in all populations
sort bruniquel-snp.txt Italy-snp.txt Pyrenees-snp.txt | uniq -c | sort -n -k1 | awk '$1 == '3' {print $2}' > snp-list.txt

wc -l snp-list.txt
# 3757


# remove within-population monomorphic SNPs
vcftools --vcf tmp/${todayanalysis}-id.vcf \
         --snps snp-list.txt \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}-108samples-maf005-NOmonomorphic-100support

# kept 3757 out of a possible 116074 Sites

# add fake SNPs and all real SNP to a new VCF file
cat tmp/${todayanalysis}-108samples-maf005-NOmonomorphic-100support.recode.vcf \
 tmp/fakeSolSNPs \
 > tmp/intersected_with-fakeSolSNPs.vcf

# Step 5: assign chromosome-and-position-based IDs
plink --vcf tmp/intersected_with-fakeSolSNPs.vcf \
       --allow-extra-chr \
       --allow-no-sex \
       --pheno pheno.txt \
       --set-missing-var-ids @:#\$1,\$2 \
       --make-bed \
       --out tmp/${todayanalysis}-id2

# recode as VCF file
plink --bfile tmp/${todayanalysis}-id2 \
       --allow-extra-chr \
       --allow-no-sex \
       --recode vcf-fid  \
       --out tmp/${todayanalysis}-with-simulated-snps

# 3851 SNPs
bcftools view -H tmp/${todayanalysis}-with-simulated-snps.vcf | wc -l

# obtain SNP matrix for R script of genotype likelihood test
bcftools query -f '%ID\t%POS[\t%GT]\n' tmp/${todayanalysis}-with-simulated-snps.vcf > result/${todayanalysis}-snp_matrix.txt

# obtain sample vec
bcftools query -l tmp/${todayanalysis}-with-simulated-snps.vcf \
             > result/${todayanalysis}-sample_names.txt

# Step 6: run a Fisher test of association for social type
# standard case/control association analysis using Fisher's exact test to generate significance
plink --vcf tmp/${todayanalysis}-with-simulated-snps.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out result/${todayanalysis}

# Step 7 - create a genome file - IBD will be calculated
plink --bfile tmp/${todayanalysis}-id2 \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --out tmp/${todayanalysis}-IBD

# Step 8 - PCA generate an eigenvec file containing PCs
plink --bfile tmp/${todayanalysis}-id2 \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

# copy to result
cp tmp/${todayanalysis}-PCA* result/.



# Step 9: analyse results in R
../current-summary.Rmd








###############################################################################
###############################################################################

# Simulating Formica selysi SNPs and testing for association

todayanalysis="2019-08-29-flye-Pheidole-genic-fake-Formica-snps"

# Step 1: change genotype
Rscript make-fake-Sol-snp.Rmd

# create an empty file
touch tmp/fakeFormicaSNPs

# paste header and info in order
for i in $(seq 1 138); do
    paste tmp/formica_updated_GT_snp_header$i tmp/formica_updated_GT_snp$i >> tmp/fakeFormicaSNPs
done


# add fake SNPs and all real SNP to a new VCF file
cat tmp/2019-08-23-flye-Pheidole-genic-fake-Solenopsis-snps-108samples-maf005-NOmonomorphic-100support.recode.vcf \
 tmp/fakeFormicaSNPs \
 > tmp/intersected_with-fakeFormicaSNPs.vcf

# Step 2: assign chromosome-and-position-based IDs
plink --vcf tmp/intersected_with-fakeFormicaSNPs.vcf \
       --allow-extra-chr \
       --allow-no-sex \
       --pheno pheno.txt \
       --set-missing-var-ids @:#\$1,\$2 \
       --make-bed \
       --out tmp/${todayanalysis}-id2

# recode as VCF file
plink --bfile tmp/${todayanalysis}-id2 \
       --allow-extra-chr \
       --allow-no-sex \
       --recode vcf-fid  \
       --out tmp/${todayanalysis}-with-simulated-snps

# count nb of snps 3895
bcftools view -H tmp/${todayanalysis}-with-simulated-snps.vcf | wc -l

# obtain SNP matrix for R script of genotype likelihood test
bcftools query -f '%ID\t%POS[\t%GT]\n' tmp/${todayanalysis}-with-simulated-snps.vcf > result/${todayanalysis}-snp_matrix.txt

# obtain sample vec
bcftools query -l tmp/${todayanalysis}-with-simulated-snps.vcf \
             > result/${todayanalysis}-sample_names.txt

# Step 3: run a Fisher test of association for social type
# standard case/control association analysis using Fisher's exact test to generate significance
plink --vcf tmp/${todayanalysis}-with-simulated-snps.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out result/${todayanalysis}

# Step 4 - create a genome file - IBD will be calculated
plink --bfile tmp/${todayanalysis}-id2 \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --out tmp/${todayanalysis}-IBD

# Step 5 - PCA generate an eigenvec file containing PCs
plink --bfile tmp/${todayanalysis}-id2 \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

# copy to result
cp tmp/${todayanalysis}-PCA* result/.

# Step 6: analyse results in R
../current-summary.Rmd
#!/bin/sh

###############################################################################
### Aims ###
Using only coding regions of the MinION assembly, focus on variants that could be linked the social organisation. Add a fake SNP homhet and see if I can detect it.

###############################################################################
### Project preparation ###
module load bcftools/1.8
module load vcftools/0.1.15
module load R/3.5.1
# tabix 0.2.5
module load plink/1.9-170906


cp -a 2019-03-19-coding-only-109samples-maf10percent 2019-04-02-addfakesnp
cd 2019-04-02-addfakesnp

mkdir input

cd input

# copy vcf that has been filtered:
# 75% sample support
# biallelic SNPs
# phred quality > 30
# 109 samples (outliers removed)
# and contains only coding regions
ln -s ~/2019-03-18-filter_PpalE_genic_regions/result/intersected.vcf .
cd ..

mkdir result

mkdir -p ~/monthly_autoScratch/2019-03-05-association_analysis_flye_assembly/2019-03-08-109samples-maf10percent

ln -s ~/monthly_autoScratch/2019-03-05-association_analysis_flye_assembly/2019-03-08-109samples-maf10percent tmp

mkdir -p ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp

# copy important files
cp ~/2018-11-09-association_analysis_mixed_assembly/result/2019-02-06-109samples-maf10percent/pheno.txt .

cp ~/2018-11-09-association_analysis_mixed_assembly/result/2019-02-06-109samples-maf10percent/exploring-pca-results.Rmd .

cp ~/2018-11-09-association_analysis_mixed_assembly/result/2019-02-06-109samples-maf10percent/input/S2_pheidole_pop_paper.csv .

cp ~/2018-11-09-association_analysis_mixed_assembly/result/2019-02-06-109samples-maf10percent/assoc-analysis.Rmd .

cp ~/2019-03-18-filter_PpalE_genic_regions/result/non_genic_contig_names .

cp ~/2019-03-18-filter_PpalE_genic_regions/intersected.contig.length .

todayanalysis="2019-04-02-flye-Pheidole-genic-fakesnp-homhet"

################################################################################
# Add a SNP to the vcf file with the conditions:

# Step 1: create a realistic SNP
# monogynous are 0/0
# polygynous are 0/1
# is the analysis picking this SNP in the Manhattan plot?
# copy one SNP from VF to new file and change the name of contig
bcftools view -H input/intersected.vcf | head -1 | sed 's/contig_1_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/contig_01_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/' > fakeSNPhomhet

# remove the top 9 lines (not genotype info)
sed -r 's/\t/\n/g' fakeSNPhomhet | tail -n 108 > fakeSNPhomhet-gt_only

# get the sample names
bcftools query -l input/intersected.vcf > sample_names.txt

# change only the GT of poly for 1/1
cp make-fake-snp.Rmd make-fake-homhet-snp.Rmd
Rscript make-fake-homhet-snp.Rmd

# reformat the snp info into VCF
cut -f 1,2,3,4,5,6,7,8,9 fakeSNPhomhet | paste - fakeSNPhomhet-gt_only-updated > fakeSNPhomhet_updated

# add new SNP and all real SNP to a new VCF file
cat input/intersected.vcf fakeSNPhomhet_updated > tmp/intersected_with-fakeSNPhomhet.vcf

# This vcf is ready to be analysed the same way as before
# to see if I can pick up the signal or not


### Checking vcf stats ###

# Step 1: calculate the number of variants left: 113,235
# [coding&noncoding: 808475]
grep -v "^#" tmp/intersected_with-fakeSNPhomhet.vcf | wc -l

# get number of variants per contig
grep -v "^#" tmp/intersected_with-fakeSNPhomhet.vcf | cut -f 1 | sort | uniq -c > ${todayanalysis}-snp-per-contig.txt


# copy to archive

rsync -avx --human-readable --progress tmp/intersected_with-fakeSNPhomhet.vcf ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/.

rsync -avx --human-readable --progress sample_names.txt ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/.


# softlink to result

cd result

ln -s ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/intersected_with-fakeSNPhomhet.vcf .

ln -s ~/archive/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp/sample_names.txt .

cd ..

###############################################################################
###############################################################################
Fork one: GWAS with LD pruning
###############################################################################
## Prune away LD SNPs ##

# step 1 assign chromosome-and-position-based IDs (currently not named)
plink --vcf result/intersected_with-fakeSNPhomhet.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --set-missing-var-ids @:#\$1,\$2 \
      --make-bed \
      --out tmp/${todayanalysis}-id



# step 2 - pruning away SNPs in LD
# people seem to use 0.2 as a threshold
# 58,497 of 113,234 variants removed
# [coding&noncoding: 522,460 of 808,475 variants removed]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --indep-pairwise 50 5 0.2 \
      --out tmp/${todayanalysis}-snp-in-ld

cp tmp/${todayanalysis}-snp-in-ld.prune.in result/.

# step 3 - filter data by keeping only the SNPs that are not in disequilibrium
# 54,737 variants and 108
# [coding&noncoding: 286,015 variants kept and 108 people]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --extract tmp/${todayanalysis}-snp-in-ld.prune.in \
      --make-bed \
      --out tmp/${todayanalysis}-pruned-data

cp tmp/${todayanalysis}-pruned-data.bim result/. ;
cp tmp/${todayanalysis}-pruned-data.bed result/. ;
cp tmp/${todayanalysis}-pruned-data.fam result/.



###############################################################################
## PCA analysis ##

# step 1 - create a genome file - IBD will be calculated
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --out tmp/${todayanalysis}-IBD

# step 2 - generate an eigenvec file containing PCs
# header adds a header line to the .eigenvec file(s)
# --cluster uses IBS values calculated to perform complete linkage clustering
# .cluster2 describes only the final cluster configuration
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

cp tmp/${todayanalysis}-PCA* result/.

# make sense of the pca eigenvalue and ultimately
# how much of the variance is explained by each PC?
# No change when adding one extra snp
cp exploring-pca-results.Rmd exploring-homhet-pca-results.Rmd
Rscript exploring-homhet-pca-results.Rmd


###############################################################################
## run association test ##

# Step 1: Perform the association analysis using 2 main PCs
# from the eigenvec file as covariates
# covariate can only be used with a regression model, here logistics --logistic
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --covar result/2019-04-02-flye-Pheidole-genic-fakesnp-homhet-eigenvec.tops.csv \
      --covar-name PC1,PC2 \
      --logistic \
      --out tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues

# Step 2: understanding the output of the model
# ADD means the additive effects of allele dosage (counts of each allele)
# the direction of the regression coefficient represents
# the effect of each extra minor allele
# (i.e. a positive regression coefficient means that
# the minor allele increases risk/phenotype mean
# PLINK will also output the beta-coefficients for the adjustment variables
# that is why there are more lines than SNPs: 164215
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic

# remove the lines about PC1 and PC2
grep ADD tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic > \
 tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# count the number of variants left: 54,38 SNPs
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# Step 3: try a simple fisher test
# standard case/control association analysis using Fisher's exact test to generate significance
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out tmp/${todayanalysis}

# copy to result
cp tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered result/.
cp tmp/${todayanalysis}.assoc.fisher result/.


###############################################################################
## Association analysis ##

# adjusting p-values from plink output
# association test on each SNP for allele count per gyny group
cp assoc-analysis.Rmd assoc-analysis-homhet.Rmd
Rscript assoc-analysis.Rmd


# Conclusion: A fake SNP is detected by Fisher test, but not regression analysis.



todayanalysis="2019-04-02-flye-Bruniquel-genic-fakesnp"
###############################################################################
### Subset for Bruniquel only ###

cp ~/2019-03-05-association_analysis_flye_assembly/result/2019-03-14-bruniquel-maf10percent/bruniquel-colonies.txt .

vcftools --vcf tmp/intersected_with-fakeSNP.vcf \
         --keep bruniquel-colonies.txt \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}
# kept 68 out of 108 Individuals
# 113234 out of a possible 113234 Sites
# 46 seconds


###############################################################################
### Prune away LD SNPs ##


# step 1 assign chromosome-and-position-based IDs (currently not named)
plink --vcf tmp/${todayanalysis}.recode.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --set-missing-var-ids @:#\$1,\$2 \
      --make-bed \
      --out tmp/${todayanalysis}-id

# step 2 - pruning away SNPs in LD
# people seem to use 0.2 as a threshold
# 57,613 of 113,235 variants removed
# [coding&noncoding: 522,460 of 808,475 variants removed]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --indep-pairwise 50 5 0.2 \
      --out tmp/${todayanalysis}-snp-in-ld

cp tmp/${todayanalysis}-snp-in-ld.prune.in result/.

# step 3 - filter data by keeping only the SNPs that are not in disequilibrium
# 54,737 variants and 108
# [coding&noncoding: 286,015 variants kept and 108 people]
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --extract tmp/${todayanalysis}-snp-in-ld.prune.in \
      --make-bed \
      --out tmp/${todayanalysis}-pruned-data

cp tmp/${todayanalysis}-pruned-data.bim result/. ;
cp tmp/${todayanalysis}-pruned-data.bed result/. ;
cp tmp/${todayanalysis}-pruned-data.fam result/.



###############################################################################
## PCA analysis ##

# step 1 - create a genome file - IBD will be calculated
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --out tmp/${todayanalysis}-IBD

# step 2 - generate an eigenvec file containing PCs
# header adds a header line to the .eigenvec file(s)
# --cluster uses IBS values calculated to perform complete linkage clustering
# .cluster2 describes only the final cluster configuration
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --extract result/${todayanalysis}-snp-in-ld.prune.in \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

cp tmp/${todayanalysis}-PCA* result/.

# make sense of the pca eigenvalue and ultimately
# how much of the variance is explained by each PC?
# No change when adding one extra snp
cp exploring-pca-results.Rmd Bruniquel-exploring-pca-results.Rmd
Rscript Bruniquel-exploring-pca-results.Rmd


###############################################################################
## run association test ##

# Step 1: Perform the association analysis using 2 main PCs
# from the eigenvec file as covariates
# covariate can only be used with a regression model, here logistics --logistic
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --covar result/2019-04-02-flye-Bruniquel-genic-fakesnp-eigenvec.tops.csv \
      --covar-name PC1,PC2 \
      --logistic \
      --out tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues

# Step 2: understanding the output of the model
# ADD means the additive effects of allele dosage (counts of each allele)
# the direction of the regression coefficient represents
# the effect of each extra minor allele
# (i.e. a positive regression coefficient means that
# the minor allele increases risk/phenotype mean
# PLINK will also output the beta-coefficients for the adjustment variables
# that is why there are more lines than SNPs: 166867
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic

# remove the lines about PC1 and PC2
grep ADD tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic > \
 tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# count the number of variants left: 55,622 SNPs
wc -l tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered

# Step 3: try a simple fisher test
# standard case/control association analysis using Fisher's exact test to generate significance
plink --bfile result/${todayanalysis}-pruned-data \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out tmp/${todayanalysis}

# copy to result
cp tmp/${todayanalysis}-LDpruned-maf0.05-snp-pvalues.assoc.logistic.filtered result/.
cp tmp/${todayanalysis}.assoc.fisher result/.


###############################################################################
## Association analysis ##

# adjusting p-values from plink output
# association test on each SNP for allele count per gyny group
cp assoc-analysis.Rmd Bruniquel-assoc-analysis.Rmd
Rscript Bruniquel-assoc-analysis.Rmd




###############################################################################
###############################################################################

# Simulating Solenopsis invicta SNPs and testing for association

todayanalysis="2019-08-23-flye-Pheidole-genic-fake-Solenopsis-snps"

# autoscratch does not exist anymore
unlink tmp
mkdir -p ~/scratch/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp

ln -s ~/scratch/2019-03-05-association_analysis_flye_assembly/2019-04-02-addfakesnp tmp

# Step 1: create realistic SNPs
# social SNPs count: 1.4 per 1000bp (Pracana et al 2017)
# monogynous are all 0/0
# polygynous are either 0/1 (p=2/3) or 0/0 (p=1/3)

# copy one SNP from VF to new file and change the name of contig
bcftools view -H input/intersected.vcf | head -1 | sed 's/contig_1_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/contig_01_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/' > fakeSNPSol

# keep header of SNP (to be altered in R)
cut -f 1,2,3,4,5,6,7,8,9 fakeSNPSol > snp-first-line

# remove the top 9 lines (not genotype info)
sed -r 's/\t/\n/g' fakeSNPSol | tail -n 108 > fakeSNPSol-gt_only

# get the sample names
bcftools query -l input/intersected.vcf > sample_names.txt

# calculate nb of SNPs 113234
bcftools view -H input/intersected.vcf | wc -l

# change genotype
cp make-fake-snp.Rmd make-fake-Sol-snp.Rmd
Rscript make-fake-Sol-snp.Rmd

# create an empty file
touch tmp/fakeSolSNPs

# paste header and info in order
for i in $(seq 1 94); do
    paste tmp/updated_GT_snp_header$i tmp/updated_GT_snp$i >> tmp/fakeSolSNPs
done



# Step 2: assign chromosome-and-position-based IDs (113234 variants)
plink --vcf input/intersected.vcf  \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --set-missing-var-ids @:#\$1,\$2 \
      --make-bed \
      --out tmp/${todayanalysis}-id

# recode as VCF to be filtered by vcftools
plink --bfile tmp/${todayanalysis}-id \
      --allow-extra-chr \
      --allow-no-sex \
      --recode vcf-fid \
      --out tmp/${todayanalysis}-id

# Step 3: for each population, filter out the SNPs without 100% support and  monomorphic

# keep only samples from Bruniquel
cat S2_pheidole_pop_paper.csv | grep -E "Bruniquel" | cut -d "," -f 1 > bruniquel-colonies.txt

# filter VCF
vcftools --vcf tmp/${todayanalysis}-id.vcf \
         --max-missing 1 \
         --keep bruniquel-colonies.txt \
         --maf 0.05 \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}-bruniquel-100support-NOmonomorphic

# obtain SNP IDs
bcftools query -f '%ID\n' tmp/${todayanalysis}-bruniquel-100support-NOmonomorphic.recode.vcf > bruniquel-snp.txt
wc -l bruniquel-snp.txt
# 11900 bruniquel-snp.txt

# keep only samples from Italy
cat S2_pheidole_pop_paper.csv | grep -E "Italy" | cut -d "," -f 1 > Italy-colonies.txt

# filter VCF
vcftools --vcf tmp/${todayanalysis}-id.vcf \
         --max-missing 1 \
         --keep Italy-colonies.txt \
         --maf 0.05 \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}-Italy-100support-NOmonomorphic

# obtain SNP IDs
bcftools query -f '%ID\n' tmp/${todayanalysis}-Italy-100support-NOmonomorphic.recode.vcf > Italy-snp.txt

wc -l Italy-snp.txt
# 28458 Italy-snp.txt

# keep only samples from Pyrenees
cat S2_pheidole_pop_paper.csv | grep -E "Pyrenees" | cut -d "," -f 1 > Pyrenees-colonies.txt

# filter VCF
vcftools --vcf tmp/${todayanalysis}-id.vcf \
        --max-missing 1 \
        --keep Pyrenees-colonies.txt \
        --maf 0.05 \
        --recode \
        --recode-INFO-all \
        --out tmp/${todayanalysis}-Pyrenees-100support-NOmonomorphic

# obtain SNP IDs
bcftools query -f '%ID\n' tmp/${todayanalysis}-Pyrenees-100support-NOmonomorphic.recode.vcf > Pyrenees-snp.txt
wc -l Pyrenees-snp.txt
# 49838 Pyrenees-snp.txt



# Step 4: keep loci that are found in all populations
sort bruniquel-snp.txt Italy-snp.txt Pyrenees-snp.txt | uniq -c | sort -n -k1 | awk '$1 == '3' {print $2}' > snp-list.txt

wc -l snp-list.txt
# 3757


# remove within-population monomorphic SNPs
vcftools --vcf tmp/${todayanalysis}-id.vcf \
         --snps snp-list.txt \
         --recode \
         --recode-INFO-all \
         --out tmp/${todayanalysis}-108samples-maf005-NOmonomorphic-100support

# kept 3757 out of a possible 116074 Sites

# add fake SNPs and all real SNP to a new VCF file
cat tmp/${todayanalysis}-108samples-maf005-NOmonomorphic-100support.recode.vcf \
 tmp/fakeSolSNPs \
 > tmp/intersected_with-fakeSolSNPs.vcf

# Step 5: assign chromosome-and-position-based IDs
plink --vcf tmp/intersected_with-fakeSolSNPs.vcf \
       --allow-extra-chr \
       --allow-no-sex \
       --pheno pheno.txt \
       --set-missing-var-ids @:#\$1,\$2 \
       --make-bed \
       --out tmp/${todayanalysis}-id2

# recode as VCF file
plink --bfile tmp/${todayanalysis}-id2 \
       --allow-extra-chr \
       --allow-no-sex \
       --recode vcf-fid  \
       --out tmp/${todayanalysis}-with-simulated-snps

# 3851 SNPs
bcftools view -H tmp/${todayanalysis}-with-simulated-snps.vcf | wc -l

# obtain SNP matrix for R script of genotype likelihood test
bcftools query -f '%ID\t%POS[\t%GT]\n' tmp/${todayanalysis}-with-simulated-snps.vcf > result/${todayanalysis}-snp_matrix.txt

# obtain sample vec
bcftools query -l tmp/${todayanalysis}-with-simulated-snps.vcf \
             > result/${todayanalysis}-sample_names.txt

# Step 6: run a Fisher test of association for social type
# standard case/control association analysis using Fisher's exact test to generate significance
plink --vcf tmp/${todayanalysis}-with-simulated-snps.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out result/${todayanalysis}

# Step 7 - create a genome file - IBD will be calculated
plink --bfile tmp/${todayanalysis}-id2 \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --out tmp/${todayanalysis}-IBD

# Step 8 - PCA generate an eigenvec file containing PCs
plink --bfile tmp/${todayanalysis}-id2 \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

# copy to result
cp tmp/${todayanalysis}-PCA* result/.



# Step 9: analyse results in R
../current-summary.Rmd








###############################################################################
###############################################################################

# Simulating Formica selysi SNPs and testing for association

todayanalysis="2019-08-29-flye-Pheidole-genic-fake-Formica-snps"

# Step 1: change genotype
Rscript make-fake-Sol-snp.Rmd

# create an empty file
touch tmp/fakeFormicaSNPs

# paste header and info in order
for i in $(seq 1 138); do
    paste tmp/formica_updated_GT_snp_header$i tmp/formica_updated_GT_snp$i >> tmp/fakeFormicaSNPs
done


# add fake SNPs and all real SNP to a new VCF file
cat tmp/2019-08-23-flye-Pheidole-genic-fake-Solenopsis-snps-108samples-maf005-NOmonomorphic-100support.recode.vcf \
 tmp/fakeFormicaSNPs \
 > tmp/intersected_with-fakeFormicaSNPs.vcf

# Step 2: assign chromosome-and-position-based IDs
plink --vcf tmp/intersected_with-fakeFormicaSNPs.vcf \
       --allow-extra-chr \
       --allow-no-sex \
       --pheno pheno.txt \
       --set-missing-var-ids @:#\$1,\$2 \
       --make-bed \
       --out tmp/${todayanalysis}-id2

# recode as VCF file
plink --bfile tmp/${todayanalysis}-id2 \
       --allow-extra-chr \
       --allow-no-sex \
       --recode vcf-fid  \
       --out tmp/${todayanalysis}-with-simulated-snps

# count nb of snps 3895
bcftools view -H tmp/${todayanalysis}-with-simulated-snps.vcf | wc -l

# obtain SNP matrix for R script of genotype likelihood test
bcftools query -f '%ID\t%POS[\t%GT]\n' tmp/${todayanalysis}-with-simulated-snps.vcf > result/${todayanalysis}-snp_matrix.txt

# obtain sample vec
bcftools query -l tmp/${todayanalysis}-with-simulated-snps.vcf \
             > result/${todayanalysis}-sample_names.txt

# Step 3: run a Fisher test of association for social type
# standard case/control association analysis using Fisher's exact test to generate significance
plink --vcf tmp/${todayanalysis}-with-simulated-snps.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out result/${todayanalysis}

# Step 4 - create a genome file - IBD will be calculated
plink --bfile tmp/${todayanalysis}-id2 \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --genome \
      --out tmp/${todayanalysis}-IBD

# Step 5 - PCA generate an eigenvec file containing PCs
plink --bfile tmp/${todayanalysis}-id2 \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --cluster \
      --pca header \
      --read-genome tmp/${todayanalysis}-IBD.genome \
      --out tmp/${todayanalysis}-PCA

# copy to result
cp tmp/${todayanalysis}-PCA* result/.

# Step 6: analyse results in R
../current-summary.Rmd



###############################################################################
### Aims ###
Assess statistical power of association testing with simulated data (Solenopsis)

###############################################################################
### Project preparation ###
module load bcftools/1.8
module load vcftools/0.1.15
module load R/3.5.1
# tabix 0.2.5
module load plink/1.9-170906


# Solenopsis model with Fisher's exact test and Bonferroni adjustment
todayanalysis="2020-10-08-fake-Solenopsis-snps-Fisher-Bonferroni"

# soft link the VCF with 121,786 SNPs
# all populations, 75% support, socially polymorphic within each population
cd input

ln -s /data/home/btx077/2018-05-illumina-pallidula-results/2018-11-09-association_analysis_mixed_assembly/2019-02-06-109samples-maf10percent/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf \
      2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf

cd ..

# Step 1: create realistic SNPs
# social SNPs count: 1.4 per 1000bp (Pracana et al 2017)
# monogynous are all 0/0
# polygynous are either 0/1 (p=2/3) or 0/0 (p=1/3)

# copy one SNP from VF to new file and change the name of contig
bcftools view -H input/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf | head -1 \
      | sed 's/contig_1_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/contig_01_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/' \
      > ${todayanalysis}fakeSNPSol

# keep header of SNP (to be altered in R)
cut -f 1,2,3,4,5,6,7,8,9 ${todayanalysis}fakeSNPSol \
      > ${todayanalysis}-snp-first-line

# remove the top 9 lines (not genotype info)
sed -r 's/\t/\n/g' ${todayanalysis}fakeSNPSol | tail -n 108 \
      > ${todayanalysis}-fakeSNPSol-gt_only

# get the sample names
bcftools query -l input/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf \
      > ${todayanalysis}-sample_names.txt

# calculate nb of SNPs 121786
bcftools view -H input/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf \
      | wc -l

# change genotype
cp make-fake-Sol-snp.Rmd 2020-10-08-make-fake-Sol-snp.Rmd
Rscript 2020-10-08-make-fake-Sol-snp.Rmd

# create an empty file
touch tmp/2020-10-08-fakeSolSNPs

# paste header and info in order
for i in $(seq 1 3054); do
    paste tmp/2020-10-08-updated_GT_snp_header$i tmp/2020-10-08-updated_GT_snp$i >> \
    tmp/2020-10-08-fakeSolSNPs
done

# add fake SNPs and all real SNP to a new VCF file
cat input/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf \
 tmp/2020-10-08-fakeSolSNPs \
 > tmp/${todayanalysis}-fakeSolSNPs.vcf

# Step 2: combine real SNPs with the simulated SNPs
plink --vcf tmp/${todayanalysis}-fakeSolSNPs.vcf \
       --allow-extra-chr \
       --allow-no-sex \
       --pheno pheno.txt \
       --set-missing-var-ids @:#\$1,\$2 \
       --make-bed \
       --out tmp/${todayanalysis}-id2

# recode as VCF file
plink --bfile tmp/${todayanalysis}-id2 \
       --allow-extra-chr \
       --allow-no-sex \
       --recode vcf-fid  \
       --out tmp/${todayanalysis}-with-simulated-snps

# 124840 SNPs
bcftools view -H tmp/${todayanalysis}-with-simulated-snps.vcf | wc -l

# obtain SNP matrix for R script of genotype likelihood test
bcftools query -f '%ID\t%POS[\t%GT]\n' tmp/${todayanalysis}-with-simulated-snps.vcf \
      > result/${todayanalysis}-snp_matrix.txt

# obtain sample vec
bcftools query -l tmp/${todayanalysis}-with-simulated-snps.vcf \
             > result/${todayanalysis}-sample_names.txt


# Step 3: run a Fisher test of association for social type
# standard case/control association analysis using Fisher's exact test to generate significance
plink --vcf tmp/${todayanalysis}-with-simulated-snps.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out result/${todayanalysis}


# Step 4: analyse results in R
# Are the simulated SNPs significantly associated with social type?
Rscript 2020-10-08-simulated-SNPs-assoc-analysis.Rmd




###############################################################################
### Aims ###
Assess statistical power of association testing with simulated data (Formica)

###############################################################################
### Project preparation ###
module load bcftools/1.8
module load vcftools/0.1.15
module load R/3.5.1
# tabix 0.2.5
module load plink/1.9-170906


# Formics model with Fisher's exact test and Bonferroni adjustment
todayanalysis="2020-10-12-fake-Formica-snps-Fisher-Bonferroni"


# Step 1: create realistic SNPs
# social SNPs count: 643 out of 18199 bp (Purcell et al 2014)
# monogynous are all 0/0
# polygynous are either 0/1 (p=0.68) or 1/1 (p=0.32)

# copy one SNP from VF to new file and change the name of contig
bcftools view -H input/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf | head -1 \
      | sed 's/contig_1_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/contig_01_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon_pilon/' \
      > ${todayanalysis}fakeSNP

# keep header of SNP (to be altered in R)
cut -f 1,2,3,4,5,6,7,8,9 ${todayanalysis}fakeSNP \
      > ${todayanalysis}-snp-first-line

# remove the top 9 lines (not genotype info)
sed -r 's/\t/\n/g' ${todayanalysis}fakeSNP | tail -n 108 \
      > ${todayanalysis}-fakeSNP-gt_only

# get the sample names
bcftools query -l input/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf \
      > ${todayanalysis}-sample_names.txt

# calculate nb of SNPs: 121786
bcftools view -H input/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf \
      | wc -l

# change genotype
Rscript 2020-10-08-make-fake-Sol-snp.Rmd

# create an empty file
touch tmp/2020-10-12-fakeForSNPs

# paste header and info in order
for i in $(seq 1 4460); do
    paste tmp/2020-10-12-formica_updated_GT_snp_header$i tmp/2020-10-12-formica_updated_GT_snp$i >> \
    tmp/2020-10-12-fakeForSNPs
done

# add fake SNPs and all real SNP to a new VCF file
cat input/2020-05-04-108samples-maf005-NOmonomorphic-75support.recode.vcf \
 tmp/2020-10-12-fakeForSNPs \
 > tmp/${todayanalysis}-fakeForSNPs.vcf



# Step 2: combine real SNPs with the simulated SNPs
plink --vcf tmp/${todayanalysis}-fakeForSNPs.vcf \
       --allow-extra-chr \
       --allow-no-sex \
       --pheno pheno.txt \
       --set-missing-var-ids @:#\$1,\$2 \
       --make-bed \
       --out tmp/${todayanalysis}-id2

# recode as VCF file
plink --bfile tmp/${todayanalysis}-id2 \
       --allow-extra-chr \
       --allow-no-sex \
       --recode vcf-fid  \
       --out tmp/${todayanalysis}-with-simulated-snps

# 126246 SNPs
bcftools view -H tmp/${todayanalysis}-with-simulated-snps.vcf | wc -l

# obtain SNP matrix for R script of genotype likelihood test
bcftools query -f '%ID\t%POS[\t%GT]\n' tmp/${todayanalysis}-with-simulated-snps.vcf \
      > result/${todayanalysis}-snp_matrix.txt

# obtain sample vec
bcftools query -l tmp/${todayanalysis}-with-simulated-snps.vcf \
             > result/${todayanalysis}-sample_names.txt


# Step 3: run a Fisher test of association for social type
# standard case/control association analysis using Fisher's exact test to generate significance
plink --vcf tmp/${todayanalysis}-with-simulated-snps.vcf \
      --allow-extra-chr \
      --allow-no-sex \
      --pheno pheno.txt \
      --assoc fisher \
      --out result/${todayanalysis}


# Step 4: analyse results in R
# Are the simulated SNPs significantly associated with social type?
Rscript 2020-10-08-simulated-SNPs-assoc-analysis.Rmd








###############################################################################
### Aims ###
Assess statistical power of association testing with simulated data (misgenotyping)

###############################################################################
# Misgenotyping:
# Misgenotyping could have happen because of null alleles during microsatellite PCR steps. We tested the power of our analysis (Fisher's exact test) for misgenotyping the social type (multiple-queen or single-queen).
# We simulated 1000 times our association analysis, for each time 10% of the samples were assigned the alternative social type (e.g. single-queen sample becomes multiple-queen sample).

# If our analysis stands misgenotyping, the number of significant SNPs should remain within the same ballpark as our current analysis (46 out 121,000 SNPs) and the strength of the association (measured with raw p-value) should remain within the same ballpark (padjust min, max and mean).

# If our analysis is not powerful enough to allow for 10% genotyping, the number of significant SNPs (and their strength of association) will be outliers.

# In bash, write a loop that:


# In R:
# Adjust for Bonferroni for each test

# Plot histogram of number of sig freq (x = number of sig SNPs, y = number of tests)
# Add in colour the real numbers of SNPs

# Plot histogram of distribution of raw p-values
# Output 
# How many SNPs are significant?
# What is the range of p-values? (plot the distribution)
# Is the real distribution comparable to the normal distribution of p-values?
# Plot the distribution of P-values for each experiment

# this script will create Pheidole VCFs and PLINK assoc files with 10% misgenotyping
chmod +x ./misgenotype-ten-vcfs.sh
./misgenotype-ten-vcfs.sh

# increase the simulation replications to hundred
cp misgenotype-ten-vcfs.sh misgenotype-1000-vcfs.sh

chmod +x ./misgenotype-1000-vcfs.sh
./misgenotype-1000-vcfs.sh 

ls tmp/2020-10-19-misgenotyping-Fisher-Bonferroni*.assoc.fisher

# now analyse results in R
# Are the misgenotyped SNPs significantly associated with social type?
Rscript 2020-10-08-simulated-SNPs-assoc-analysis.Rmd

# run R script to obtain plots of simulated P-value distribution and number of sig snps
tmux new-session
Rscript 2020-11-04-misgenotyping-analysis.R #HERE 2021-01-15
# result/2020-11_distribution_real_pvalues.pdf
# result/2020-11_distribution_simulated_pvalues.pdf
# result/2020-11_histogram_simulated_number_significant_SNPs.pdf
# result/real_snps_proportion_in_simulated_sig_snps_10.csv


#####
# 2021-01-13 Testing other levels of misgenotyping: 50%, 20% and 5%

# 50 % on frontend8 tmux #HERE 2021-01-15
./misgenotype-50-for-1000-vcfs.sh
ls tmp/2021-01-13-misgenotyping-50-Fisher-Bonferroni*.assoc.fisher
Rscript 2021-01-13-misgenotyping-50-analysis.R
# result/2021-01_histogram_simulated_50_number_significant_SNPs.pdf
# result/2021-01_distribution_simulated_50_pvalues.pdf
# result/2021-01_real_snps_proportion_in_simulated_50_sig_snps_df.pdf
# result/real_snps_proportion_in_simulated_sig_snps_50.csv

# 25 % on frontend6 tmux #HERE 2021-01-15
./misgenotype-25-for-1000-vcfs.sh
ls tmp/2021-01-13-misgenotyping-25-Fisher-Bonferroni*.assoc.fisher
Rscript 2021-01-13-misgenotyping-25-analysis.R
# result/2021-01_histogram_simulated_25_number_significant_SNPs.pdf
# result/2021-01_distribution_simulated_25_pvalues.pdf
# result/2021-01_real_snps_proportion_in_simulated_25_sig_snps_df.pdf
# result/real_snps_proportion_in_simulated_sig_snps_25.csv

# 5 % on frontend6 tmux #HERE 2021-01-15
./misgenotype-5-for-1000-vcfs.sh
ls tmp/2021-01-13-misgenotyping-5-Fisher-Bonferroni*.assoc.fisher
Rscript 2021-01-13-misgenotyping-5-analysis.R
# result/2021-01_histogram_simulated_5_number_significant_SNPs.pdf
# result/2021-01_distribution_simulated_5_pvalues.pdf
# result/2021-01_real_snps_proportion_in_simulated_5_sig_snps_df.pdf
# result/real_snps_proportion_in_simulated_sig_snps_5.csv

# combine all four datasets
# result/real_snps_proportion_in_simulated_sig_snps_*.csv
# compare and contrast
Rscript 2021-01-15-misgenotpying-simulations.Rmd



