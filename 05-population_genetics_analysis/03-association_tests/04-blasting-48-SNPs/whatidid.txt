# BLAST Solenopsis and Formica supergene sequences against Pheidole genome
# Hypothesis: supergene sequences match Pheidole sequences of those 48 SNPs
# Alternative hypothesis: Pheidole SNPs are unrelated to gene content of known supergenes

# Step 1: locate data


# version gnG has genetic_map with supergene metadata
# get solenopsis gng fasta
cd input

wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/188/075/GCF_000188075.1_Si_gnG/GCF_000188075.1_Si_gnG_genomic.fna.gz

gzip -d GCF_000188075.1_Si_gnG_genomic.fna.gz

# obtain regions of gng that are supergene
ln -s /data1/archive/archive-SBCS-WurmLab/db/annotations/S_invicta/2017-01-supergene/gng_regions.tab .

# obtain a bed file of the supergene regions
grep "supergene" gng_regions.tab | cut -d " " -f 1,2,3 > gng_regions_supergene.BED

# make a fasta of only the solenopsis supergene
seqtk subseq input/GCF_000188075.1_Si_gnG_genomic.fna input/gng_regions_supergene.BED > tmp/solenopsis-supergene.fasta



# chromosome 3 has the SNPs in Formica selysi
wget ftp.ncbi.nlm.nih.gov/genomes/all/GCA/009/859/135/GCA_009859135.1_ASM985913v1/GCA_009859135.1_ASM985913v1_genomic.fna.gz

gzip -d  GCA_009859135.1_ASM985913v1_genomic.fna.gz

# make a fasta of only the solenopsis supergene
echo "CM020807.1 Formica selysi isolate DE90_pool_M chromosome 3, whole genome shotgun sequence" > selysi-supergene.list
seqtk subseq input/GCA_009859135.1_ASM985913v1_genomic.fna input/selysi-supergene.list > tmp/selysi-supergene.fasta

cd input; wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/188/075/GCF_000188075.1_Si_gnG/GCF_000188075.1_Si_gnG_genomic.gff.gz
gzip -d GCF_000188075.1_Si_gnG_genomic.gff.gz



# link the genome assembly of pheidole
ln -s /data/home/btx077/db/genomic/Pheidole_pallidula/2019-03-05-Ppal_E/Ppal_E.fasta .

# link the bed file of pheidole 48 snps
cp /data1/home/btx077/2023-02-LD/input/chrom_pos_fortyeightsnps.txt pheidole48.contig.loc

# add "Ppal_E." to each scaffold name
sed -i "s/contig/Ppal_E.contig/g" pheidole48.contig.loc

# add a third column
cut -f 2 pheidole48.contig.loc > pheidole48.loc

paste pheidole48.contig.loc pheidole48.loc >  pheidole48.BED


# Step 2: make a blast database for pheidole_genome.fasta
# make the database
module load blast+

makeblastdb -dbtype nucl -title Ppallidula \
      -in input/Ppal_E.fasta \
      -parse_seqids \
      -out Ppallidula


# Step 3: blast selysi against pheidole
blastn -query tmp/selysi-supergene.fasta \
    -db Ppallidula \
    -outfmt 6 \
    -out result/2023-03-02-selysi-supergene-agst-Ppallidula-blastn-output  \
    -evalue 1e-5 \
    -max_target_seqs 1


# Step 4: wrangle output format 6 into a bed of target (pheidole); bedtools intersect
cut -f 2,7,8 result/2023-03-02-selysi-supergene-agst-Ppallidula-blastn-output > tmp/sel-supergene-match-in-ppal.BED

bedtools intersect -a input/pheidole48.BED -b tmp/sel-supergene-match-in-ppal.BED

# 0 of the 48 SNPs is in the supergene of selysi invicta: 



# Step 3: blast solenopsis against pheidole
blastn -query tmp/solenopsis-supergene.fasta \
    -db Ppallidula \
    -outfmt 6 \
    -out result/2023-03-02-solenopsis-supergene-agst-Ppallidula-blastn-output  \
    -evalue 1e-5 \
    -max_target_seqs 1


# Step 4: wrangle output format 6 into a bed of target (pheidole); bedtools intersect
cut -f 2,7,8 result/2023-03-02-solenopsis-supergene-agst-Ppallidula-blastn-output > tmp/sol-supergene-match-in-ppal.BED

bedtools intersect -a input/pheidole48.BED -b tmp/sol-supergene-match-in-ppal.BED



# add 500 on each side of the SNPs
awk -v s=500 '{print $1, $2-s, $3+s}' input/pheidole48.BED | sed "s/ /\t/g" > input/pheidole48-500updown.BED

# check for invalid negative (one contig starts should be 0)
less input/pheidole48-500updown.BED

# create a bed file of blast hit from Sinv to Ppal
cut -f 2,7,8 result/2023-03-02-solenopsis-supergene-agst-Ppallidula-blastn-output > tmp/sol-supergene-match-in-ppal.BED

# create a bed file of blast hit from Fsel to Ppal
cut -f 2,7,8 result/2023-03-02-selysi-supergene-agst-Ppallidula-blastn-output > tmp/sel-supergene-match-in-ppal.BED

# check for intersection; no hit
bedtools intersect -a input/pheidole48-500updown.BED -b tmp/sel-supergene-match-in-ppal.BED

# check for intersection; two hits
bedtools intersect -a input/pheidole48-500updown.BED -b tmp/sol-supergene-match-in-ppal.BED

Ppal_E.contig_100	368681	368779 # contig_100:368279
Ppal_E.contig_100	367779	368063
Ppal_E.contig_1562	744702	745483 # contig_1562:745202 

# list of contig with hits
bedtools intersect -a input/pheidole48-500updown.BED -b tmp/sol-supergene-match-in-ppal.BED | cut -f 1 > tmp/sig-snp-sol.contig

grep -f tmp/sig-snp-sol.contig input/pheidole48-500updown.BED > tmp/sig-snp-sol.bed

# find coordinate of best hit (evalue = 0, max bitscore)
grep "Ppal_E.contig_100" result/2023-03-02-solenopsis-supergene-agst-Ppallidula-blastn-output | awk '$11="0.0" {print $0}' | awk '$12 > 5000 {print $0}' | cut -d " "  -f 7,8

715640 721795


# two Sinv regions with Ppal SNPs hits
NW_011794623.1:2-3037
NW_011794844.1:2-1251831

# unknown gene
grep "NW_011794623.1" input/GCF_000188075.1_Si_gnG_genomic.gff | awk '$3="gene" {print $0}' 
##sequence-region NW_011794623.1 gene 3037
NW_011794623.1 RefSeq gene 1 3037 . + . ID=id5545;Dbxref=taxon:13686;Name=Unknown;chromosome=Unknown;country=USA: Georgia;gbkey=Src;genome=genomic;genotype=Gp-9 big B;mol_type=genomic DNA;sex=male

# gene=LOC105199580;product=vacuolar protein sorting-associated protein 13B
grep "NW_011794844.1" input/GCF_000188075.1_Si_gnG_genomic.gff | awk '$3="gene" {print $0}' | awk '$2="RefSeq" {print $0}' | awk '$5 < 721800 {print $0}' | awk '$4 > 715600 {print $0}' 






# Step 5: conclude for solenopsis and selysi
# The 48 SNPs (associated with queen number) are not in regions with sequence similarity to Formica selysi (e.g. no BLAST match on Pheidole SNP regions with query Formica selysi chromosome 3 against target Pheidole pallidula). Only one SNP matches a Solenopsis invicta supergene region: on the invicta gene named "" (NW_011795053.1:194288-1052406 395005	396130)
echo "NW_011795053.1 Solenopsis invicta unplaced genomic scaffold, Si_gnG Si_gnG.scaffold00899, whole genome shotgun sequence	395005	396130" > tmp/solenopsis-supergene-pheidole-snp.BED

bedtools intersect -a tmp/solenopsis-supergene-pheidole-snp.BED -b input/GCF_000188075.1_Si_gnG_genomic.gff

# no hit, but close to LOC105206549: wolframin
grep "NW_011795053.1" input/GCF_000188075.1_Si_gnG_genomic.gff | awk '$3="gene" {print $0}' | awk '$4 > 394000 {print $0}' | awk '$4 < 397130 {print $0}'



#### tblastn to find hits close to proteins of supergene
# aim of analysis: BLAST, against Solenopsis and Formica, the Pheidole coding-genes that are nearest to the 48 SNPs

# Step 1: take the supergene protein sequences from Solenopsis, and tblastn against the entire pheidole genome. Keep only the best HSP for each protein query. Output as tab-delimited table.

mkdir 2023-10-tblast
cd 2023-10-tblast
mkdir input tmp result
cd input

# obtain the bed file of 48 SNPs of Pheidole
ln -s ~/2023-03-blast/input/pheidole48.BED .

# obtain the supergene proteins of Solenopsis (Consensus amino acid sequence of 403 protein-coding genes in the SB variant of the fire ant Solenopsis invicta social chromosome supergene, from https://datadryad.org/stash/dataset/doi:10.5061/dryad.js509):
rsync -Pav -e "ssh -i ~/.ssh/apocrita_id_rsa" consensus-bb.cds.fa btx077@login.hpc.qmul.ac.uk:/data2/home/btx077/2023-10-tblast/input/.


# get Pheidole whole genome
ln -s ~/2023-03-blast/input/Ppal_E.fasta .

cd ..


# make a database for blast
module load blast+
makeblastdb -dbtype nucl -title Ppallidula \
      -in input/Ppal_E.fasta \
      -parse_seqids \
      -out Ppallidula

# on tmux
tblastn -query input/consensus-bb.cds.fa \
    -db Ppallidula \
    -outfmt 6 \
    -out result/2023-10-05-Sinv-supergene-agst-Ppallidula-tblastn-output  \
    -max_hsps 1

wc -l result/2023-10-05-Sinv-supergene-agst-Ppallidula-tblastn-output  # 6205




# Step 2: subset the output file to only include pheidole_contig (column 2, sseqid), pheidole_start (column 9, sstart), pheidole_end (column 10, send), and solenopsis_prot_id (column 1, qseqid).
awk '{print $2 "\t" $9 "\t" $10 "\t" $1}' result/2023-10-05-Sinv-supergene-agst-Ppallidula-tblastn-output > tmp/2023-10-05_Ppal-id_Ppal-start_Ppal-end_Sinv-supergene-prot-id


# 3083 hits map on the other strand of Pheidole (ie start > end)

awk '{
if ($2 <= $3)
	print $0;
}' tmp/2023-10-05_Ppal-id_Ppal-start_Ppal-end_Sinv-supergene-prot-id > tmp/2023-10-05_Ppal-id_Ppal-start_Ppal-end_Sinv-supergene-prot-id.same.strand



# Step 3: check (e.g., with bedtools merge -d 25000: merge overlapping features between files, allowing one source to have merged features if they are less than 25,000bp apart) whether any of the 48 SNPs you identified are near any of the hits to Solenopsis genes.
module load bedtools
sort -k1,1 -k2,2n tmp/2023-10-05_Ppal-id_Ppal-start_Ppal-end_Sinv-supergene-prot-id.same.strand > tmp/2023-10-05_Ppal-id_Ppal-start_Ppal-end_Sinv-supergene-prot-id.same.strand.sorted.bed

bedtools merge -d 25000 -i tmp/2023-10-05_Ppal-id_Ppal-start_Ppal-end_Sinv-supergene-prot-id.same.strand.sorted.bed > tmp/2023-10-05_Ppal-id_Ppal-start_Ppal-end_Sinv-supergene-prot-id.merged

# print 48 SNPs that overlap with Ppal found in Sinv supergene
bedtools intersect -wa -wb -a input/pheidole48.BED -b tmp/2023-10-05_Ppal-id_Ppal-start_Ppal-end_Sinv-supergene-prot-id.merged -filenames

Ppal_E.contig_1689	1642	1642	Ppal_E.contig_1689	982	27557	closest to XM_011158527.1 (SNP is 364 bases downstream of XM_011158527.1)
Ppal_E.contig_1713	286180	286180	Ppal_E.contig_1713	281221	308106	closest to XM_011171523.1  (SNP is 4,432 bases downstream of XM_011171523.1)
Ppal_E.contig_500	688305	688305	Ppal_E.contig_500	684993	711618 closest to XM_011163068.1  686920	687072 (SNP is 1,233 bases downstream of XM_011163068.1)

